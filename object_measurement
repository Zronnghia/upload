from pypylon import pylon
import cv2
from object_detector import HomogeneousBgDetector
import numpy as np

# Khởi tạo camera Basler
tl_factory = pylon.TlFactory.GetInstance()
devices = tl_factory.EnumerateDevices()
if len(devices) == 0:
    raise Exception("Không tìm thấy camera Basler nào!")

camera = pylon.InstantCamera(tl_factory.CreateFirstDevice())
print(f"Đã kết nối với camera: {camera.GetDeviceInfo().GetModelName()}")

camera.Open()
camera.PixelFormat.SetValue("Mono8")  # Định dạng ảnh xám
camera.ExposureTime.SetValue(10000.0)  # Thời gian phơi sáng
camera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)

# Giá trị pixel_cm_ratio cố định (thay bằng giá trị bạn đã biết)
pixel_cm_ratio = 10.0  # Ví dụ: 10 pixel = 1 cm, thay bằng giá trị thực tế của bạn

# Khởi tạo detector
detector = HomogeneousBgDetector()

# Vòng lặp thời gian thực
while camera.IsGrabbing():
    grab_result = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)
    if grab_result.GrabSucceeded():
        img = grab_result.Array
        if len(img.shape) == 2:  # Chuyển ảnh xám sang RGB
            img = cv2.cvtColor(img, cv2.COLOR_GRAY2BGR)

        # Phát hiện và đo vật thể
        contours = detector.detect_objects(img)
        for cnt in contours:
            rect = cv2.minAreaRect(cnt)
            (x, y), (w, h), angle = rect

            # Tính kích thước thực tế dựa trên pixel_cm_ratio cố định
            object_width = w / pixel_cm_ratio
            object_height = h / pixel_cm_ratio

            # Vẽ hình chữ nhật và thông tin
            box = cv2.boxPoints(rect)
            box = np.int0(box)
            cv2.circle(img, (int(x), int(y)), 5, (0, 0, 255), -1)
            cv2.polylines(img, [box], True, (255, 0, 0), 2)
            cv2.putText(img, "Width {} cm".format(round(object_width, 1)), 
                        (int(x - 100), int(y - 20)), cv2.FONT_HERSHEY_PLAIN, 2, (100, 200, 0), 2)
            cv2.putText(img, "Height {} cm".format(round(object_height, 1)), 
                        (int(x - 100), int(y + 15)), cv2.FONT_HERSHEY_PLAIN, 2, (100, 200, 0), 2)

        # Hiển thị khung hình
        cv2.imshow("Basler Real-Time Measurement", img)

        # Thoát khi nhấn 'q'
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    grab_result.Release()

# Giải phóng tài nguyên
camera.StopGrabbing()
camera.Close()
cv2.destroyAllWindows()